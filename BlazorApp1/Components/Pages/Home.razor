@page "/"
@rendermode InteractiveServer

<PageTitle>TODO LIST</PageTitle>

<h1 class="boxed-title">TODO LIST</h1>

<EditForm Model= "AddTask" OnValidSubmit="AddTask">
<input class="form-control d-inline-flex w-25" @bind="newTask" placeholder="Enter a task..." style="margin-bottom: 10px;" />
<button class="btn btn-dark" @onclick="AddTask">Add</button>
</EditForm>

<ul>

    @foreach (var task in tasks.Select((t, i) => new {t, i }))
    {
    <li>
        @if (editingIndex == task.i)
            {
                <input @bind="editingText" />
                <button class="btn btn-success" @onclick="SaveEdit">Save</button>
                <button class="btn btn-success" @onclick="CancelEdit">Cancel</button>
            }
            else
            {
                <span>@task.t</span>
                <button class="btn btn-success" @onclick="() => EditTask(task.i)">Edit</button>
                <button class="btn btn-success" @onclick="() => DeleteTask(task.i)">Delete</button>
            }

        </li>
    }
   

</ul>
    
@code {
    List<string> tasks = new();
    string newTask = "";
    int? editingIndex = null;
    string editingText = "";

    void AddTask()
    {
        tasks.Add(newTask);
        newTask = "";
    }

    void EditTask(int index)
    {
        editingIndex = index;
        editingText = tasks[index];
    }

    void SaveEdit()
    {
        tasks[editingIndex.Value] = editingText;
        editingIndex = null;
    }

    void CancelEdit() => editingIndex = null;

    void DeleteTask(int index) => tasks.RemoveAt(index);
}